<?xml version="1.0" encoding="utf-8"?>
<root>
   <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
   <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
      <xsd:element name="root" msdata:IsDataSet="true">
         <xsd:complexType>
            <xsd:choice maxOccurs="unbounded">
               <xsd:element name="metadata">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" />
                     </xsd:sequence>
                     <xsd:attribute name="name" use="required" type="xsd:string" />
                     <xsd:attribute name="type" type="xsd:string" />
                     <xsd:attribute name="mimetype" type="xsd:string" />
                     <xsd:attribute ref="xml:space" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="assembly">
                  <xsd:complexType>
                     <xsd:attribute name="alias" type="xsd:string" />
                     <xsd:attribute name="name" type="xsd:string" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="data">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                        <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                     </xsd:sequence>
                     <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                     <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                     <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                     <xsd:attribute ref="xml:space" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="resheader">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                     </xsd:sequence>
                     <xsd:attribute name="name" type="xsd:string" use="required" />
                  </xsd:complexType>
               </xsd:element>
            </xsd:choice>
         </xsd:complexType>
      </xsd:element>
   </xsd:schema>
   <resheader name="resmimetype">
      <value>text/microsoft-resx</value>
   </resheader>
   <resheader name="version">
      <value>2.0</value>
   </resheader>
   <resheader name="reader">
      <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <resheader name="writer">
      <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
   	<data name="hitPIC.Picture" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
		<value>
			Qk3yBgAAAAAAADYEAAAoAAAAGQAAABkAAAABAAgAAAAAALwCAADEDgAAxA4AAAAAAAAAAAAA////ADFj
			/wAxnP8AMc7/ADH//wAAAAAAAAAAAAAAAABujvEArxcAAAAAAAAAAIIA7DgDAOc28AAAAAYAAADfAI6O
			5gAGAPAAVwGMAOw4AACEjugArxcAAAAAAAAAAIIA7DgDAO1QoADQENcAAAAAAAAAAACCAAgABgAAAPCO
			AADfFrwAKwTXAAEAAAAAAAAAAACCAOw4AwCxUK8AMATwAJc2/wABAAAAAAAAAAAAggAIC7EArxcIAIIA
			AAAAAAAAAAAAAAAAAgACgAAABQCMAP8W2QD3v18A978AAFYAZwD5v0cA978IAAAATABJXwEAAACEAFYA
			SwBAX0gANoAIAAAAggAAAAAAAAAAAAAAjABWAPoAAADWAFYASAA2gAgAAAACAAAAAAAAAAAAAACsAFYA
			hABWAMAAcIE8ABqCgABHzYQAVgD+APe/nABWAMAAcIEwABqCgABHzZwAVgD+APe/FwD3vwAAGYIAAAAA
			/wD0f2cAAAAAABiCzABWAMAAcIH8ABqCgABHzcwAVgD+APe/5ABWAJwAcIHoAPqBgABHzeQAVgD+APe/
			FwD3vwAA+IEAAAAA/wA8gGcAAAAAAPeB6AD6gQwAVgCgAPe/AAD4gQAAAADsAPqBPgBWAP8APIBnAAAA
			7AD6gbgA978gAFYAiAD5vwAA94EIAAAAAAAAALgA979eAAAA5ABWAG0A97//ADyAAAAAADwABzgAAAAA
			RgAAAAEAAwDsAAMA3wCEDhMAPwEAAAgLAAATsD8AmIBjAJcXAAAICwAAAND3AOw4AwAAAAMACAsAAAAA
			AAAAAIoACwCSAIcAAADUJwMA1CcDAAAAAAAkFrwAGB7sAAMA3wAAAAAA8AAAALiA3wA/AeIACEcHAFcB
			8gB2TD8AZBNXAAAAAADwAAAA8oAAAOKAVgAARwAAB0cAAAEAAAAIRwAAAABXANcAAgDvAKAAB0cAAACB
			wQAHRwAAAADMAEBiAAAAAAAAAADvAOI6VwAAAAYAAADfAHiBmADfFwYA5IGqAHwAAAAAAIEADgC3AEiC
			vwB/BVcAAAC3AGraZwB/vwYAfAAJAAAABQADAAAAAwADAAAAvgAOAAAAAADUAAMAGAAgAO0ANAHFAMiA
			MwAAAAYACEcAAABHAACIgd8APwHiAABHAQBXAcoA6Uo/AGQTVwAIRwAAAEcAAMqBVgCygVYAAAAAAAEA
			MgABAAAAAEcAAF8CVwDXAAAAoKjKAMiBAAAMAAAABEfXAFhOjwBAAAAAXwJEAAAArQD3v5MAiglaANJ9
			AAAAAP4AOmSKACYCogBNTw8AAQAWAAAAtwAUgkgARwSKAAAAVgDKi1oA0n3SALcFUACZE1cAphb6AC4u
			Li4uLi4uLi4uLi4uLi4uLi4uLi4uLi4AAAAuLi4uLi4uLi4uLi4uLi4BLi4uLi4uLi4uAAAALi4uLi4u
			Li4uLi4uLi4uAi4uLi4uLi4uLgAAAC4uLi4uLi4uLi4uLi4uLgIuLi4uLi4uLi4AAAAuLi4uLi4uLi4C
			Ai4CAgICAi4uLi4uLi4uAAAALi4uLi4uLi4uAgIuAgICAgIuLi4uLi4uLgAAAC4uLi4uLi4DAwMDAwMD
			AwMDLgICLi4uLi4AAAAuAQECAgIuAwMDAwQEBAQEBAMDAy4uLi4uAAAALi4CAgICAwMDBAQEBAQEAwMD
			AwMuLi4uLgAAAC4uLgICAgMDAwQEBAQEBAQEBAMDLi4uLi4AAAAuLi4CAgIDBAQEBAQEBAQEBAQEBC4u
			Li4uAAAALi4uLi4uAwQEBAQEBAQEBAQEAwMDAwMuLgAAAC4uLi4uLgMEBAQEBAQEBAQEBAMDAwMDLi4A
			AAAuLi4uLi4DBAQEBAQEBAQEBAQEBAICAgIuAAAALi4uLi4uAwQEBAQEBAQEBAQEAwMCAgIuLgAAAC4u
			LgICAgMDAwQEBAQEBAQDBAICLi4uLi4AAAAuLgICAgIDAwMDAwMEBAQDAwMDAy4uLi4uAAAALi4uLi4u
			LgMDLi4DAwMDAy4CAgIuLi4uLgAAAC4uLi4uLgICAi4uAwMDAwIuLgICLi4uLi4AAAAuLi4uLi4uLi4u
			Li4CAgICLi4uLi4uLi4uAAAALi4uLi4uLi4uLi4uAgICAi4uLi4uLi4uLgAAAC4uLi4uLi4uLi4uLgIC
			AgIuLi4uLi4uLi4AAAAuLi4uLi4uLi4uLi4BAQEuLi4uLi4uLi4uAAAALi4uLi4uLi4uLi4uAQEBLi4u
			Li4uLi4uLgAAAC4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4AAAA=
		</value>
	</data>
	<data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
		<value>
			AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
			AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyKQAMwAAAGYAAACZAAAAzAAAAAAz
			AAAzMwAAZjMAAJkzAADMMwAA/zMAAABmAAAzZgAAZmYAAJlmAADMZgAA/2YAAACZAAAzmQAAZpkAAJmZ
			AADMmQAA/5kAAADMAAAzzAAAZswAAJnMAADMzAAA/8wAADP/AABm/wAAmf8AAMz/AAAAADMAMwAzAGYA
			MwCZADMAzAAzAP8AMwAAMzMAMzMzAGYzMwCZMzMAzDMzAP8zMwAAZjMAM2YzAGZmMwCZZjMAzGYzAP9m
			MwAAmTMAM5kzAGaZMwCZmTMAzJkzAP+ZMwAAzDMAM8wzAGbMMwCZzDMAzMwzAP/MMwAA/zMAM/8zAGb/
			MwCZ/zMAzP8zAP//MwAAAGYAMwBmAGYAZgCZAGYAzABmAP8AZgAAM2YAMzNmAGYzZgCZM2YAzDNmAP8z
			ZgAAZmYAM2ZmAGZmZgCZZmYAzGZmAP9mZgAAmWYAM5lmAGaZZgCZmWYAzJlmAP+ZZgAAzGYAM8xmAGbM
			ZgCZzGYAzMxmAP/MZgAA/2YAM/9mAGb/ZgCZ/2YAzP9mAP//ZgAAAJkAMwCZAGYAmQCZAJkAzACZAP8A
			mQAAM5kAMzOZAGYzmQCZM5kAzDOZAP8zmQAAZpkAM2aZAGZmmQCZZpkAzGaZAP9mmQAAmZkAM5mZAGaZ
			mQCZmZkAzJmZAP+ZmQAAzJkAM8yZAGbMmQCZzJkAzMyZAP/MmQAA/5kAM/+ZAGb/mQCZ/5kAzP+ZAP//
			mQAAAMwAMwDMAGYAzACZAMwAzADMAP8AzAAAM8wAMzPMAGYzzACZM8wAzDPMAP8zzAAAZswAM2bMAGZm
			zACZZswAzGbMAP9mzAAAmcwAM5nMAGaZzACZmcwAzJnMAP+ZzAAAzMwAM8zMAGbMzACZzMwAzMzMAP/M
			zAAA/8wAM//MAGb/zACZ/8wAzP/MAP//zAAzAP8AZgD/AJkA/wDMAP8AADP/ADMz/wBmM/8AmTP/AMwz
			/wD/M/8AAGb/ADNm/wBmZv8AmWb/AMxm/wD/Zv8AAJn/ADOZ/wBmmf8AmZn/AMyZ/wD/mf8AAMz/ADPM
			/wBmzP8Amcz/AMzM/wD/zP8AM///AGb//wCZ//8AzP//ABAAAAAhAAAAAAAQADEAAAAQABAAIQAQAAAQ
			AABCAAgAAAAhADEAEAAQEAAAEAAhACEQAABSABAAABAQADEQAAAxACEAYwAQABAQEABCEAAAIRAQACEA
			MQBaEAAAMRAQAAAAQgAxADEAQhAQABAAQgDw+/8ApKCgAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
			AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAkJCQkJCQkJCQkJCQkA//8AAP8A/wD///8A/wAAAAAAAAkJ
			CQkJCQkJCQkJCQAAAP8A/wD/AAD/AAD/AAAAAAAACQkJCQkJCQkJCQkJAAAA/wD/AP8AAP8AAP///wAA
			AAAACQkJCQkJCQkJCQkA//8AAP///wAA/wAA/wAA/wAAAAAACQkJCQkJCQkJ/AD/AAAA/wD/AAD/AAD/
			AAD/AAAAAAAA/Pz8/Pz8/Pz8AAD//wD/AP8A////AP///wAAAAAAAAD8/Pz8/Pz8/PwAAAAAAAAAAAAA
			AAAAAAAAAAAAAAAAAAAA/Pz8/Pz8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8/Pz8/Pz8AP//AAD/
			AP8AAP8AAAD/AAD///8A////APz8/Pz8/PwA/wD/AP8A/wAA/wAAAP8AAP8AAAD/AAAA/Pz8/Pz8/AD/
			//8A////AAD/AAAA/wAA/wAAAP//AAD8/Pz8/Pz8AP8A/wD/AP8AAP8AAAD/AAD/AAAA/wAAAPz8/Pz8
			/PwA//8AAAD/AAD///8A////AP8AAAD///8AAPz8/Pz8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
			/Pz8/Pz8AAAAAAAAAAD8AAAAAAAAAAAAAAAAAAAAAAAA/Pz8/PwAAAAAAAAA/Pz8/PwAAAAAAAAAAAAA
			AAAAAAD8/Pz8/AAAAAAAAAAA/Pz8/Pz8/PwAAAAAAAAAAAAAAAD8/Pz8AAAAAAAAAAAA/Pz8/Pz8/Pz8
			/AAAAAAAAAAAAPz8/PwAAAAAAAAAAAAAAPz8/Pz8/Pz8/Pz8/AAAAAAAAPz8/AAAAAAAAPz8AAAAAPz8
			/Pz8/Pz8/Pz8/Pz8/AAA/Pz8AAAAAAAA/Pz8AAAAAPz8/Pz8/Pz8/Pz8/Pz8/Pz8/PwAAAAAAAAA/Pz8
			AAAAAPz8/Pz8/Pz8/Pz8/Pz8/Pz8/AAAAAAAAAAA/Pz8AAAAAAD8/Pz8/Pz8/Pz8/Pz8/Pz8AAAAAAAA
			AAAAAPz8/AAAAAD8/Pz5/Pz8/Pz8/Pz8/PwAAAAAAPwAAAAAAPz8/AAA/Pz8/Pn5+fn8/Pz5/Pz8/AAA
			AAAA/Pz8AAAAAPz8/Pz8/Pz8/Pn5+fn5+fn8/Pz8AAAAAAD8/Pz8AAAAAAD8/Pz8/Pz5+fn5+fz8/Pz8
			/PwAAAD8/Pz8/Pz8/AAAAPz8/Pn5+fn8+fn5/Pz8/Pz8/AD8/Pz8/Pz8/Pz8/AD8/Pz8+fz8+fz5+fz8
			+fz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pn5/Pn5/Pz5/Pz8+fn8/Pz8/Pz8/Pz8/Pz8/Pz8/Pn5+fn8/Pz8
			/Pz8/Pz8/Pz8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
			AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
			AAAAAAAAAAAAAAAAAAAAAAAA
		</value>
	</data>

</root>