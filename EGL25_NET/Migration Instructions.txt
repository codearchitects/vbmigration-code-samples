-------------------------------------------------------------------------------
Sample Name: EGL25

Description: A few people in Code Architects work with VB since its version 
             1.0, but we’ve rarely seen a better demonstration of Visual 
             Basic’s graphic capabilities than this stunning application. 
             It uses just Windows API calls – no DirectX, no OpenGL – to 
             render, rotate, animate, etc. complex solid shapes made of 
             thousands polygons...and does it blindly fast! What is even more 
             unbelievable – if you aren’t familiar with VB Migration Partner, 
             at least – is that you can convert this baby in less than 10 
             seconds. The resulting VB.NET code runs fine at the first attempt! 

Download URL: http://www.planet-source-code.com/vb/scripts/ShowCode.asp?txtCodeId=68507&lngWId=1
-------------------------------------------------------------------------------

IMPORTANT NOTE
The first step to ensure that you can migrate the VB6 project to VB.NET is 
loading the original project in the Visual Basic 6 IDE, run it to ensure that 
it works fine, that all the required type libraries are installed, and that all 
file paths are correct. 
Regardless of whether you edited the source code in any way, you should save 
the VB6 project: this save operation ensures that the .vbp file includes  
the correct path and version of referenced type libraries. 
After saving the project, it's usually a good idea to compile the VB6 project
to an executable, to detect any VB6 compilation errors that would appear under 
VB.NET as well. 
(If you don't recompile the project VB Migration Partner will display a warning 
when you later load the project.)


This sample migrates correctly with no need for any pragma. 

If you want you can use a pragma for changing the passing mode for some 
method's parameters. 
You can insert this line at the top of any file of the project 
(for example frmCanvas.frm):

'## project:UseByVal

Besides, if you would like to copy 3D models to migrated project directory you
can add this pragma: 
 
'## AddDataFile Object\*.prt
