<?xml version="1.0" encoding="utf-8"?>
<root>
   <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
   <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
      <xsd:element name="root" msdata:IsDataSet="true">
         <xsd:complexType>
            <xsd:choice maxOccurs="unbounded">
               <xsd:element name="metadata">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" />
                     </xsd:sequence>
                     <xsd:attribute name="name" use="required" type="xsd:string" />
                     <xsd:attribute name="type" type="xsd:string" />
                     <xsd:attribute name="mimetype" type="xsd:string" />
                     <xsd:attribute ref="xml:space" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="assembly">
                  <xsd:complexType>
                     <xsd:attribute name="alias" type="xsd:string" />
                     <xsd:attribute name="name" type="xsd:string" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="data">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                        <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                     </xsd:sequence>
                     <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                     <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                     <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                     <xsd:attribute ref="xml:space" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="resheader">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                     </xsd:sequence>
                     <xsd:attribute name="name" type="xsd:string" use="required" />
                  </xsd:complexType>
               </xsd:element>
            </xsd:choice>
         </xsd:complexType>
      </xsd:element>
   </xsd:schema>
   <resheader name="resmimetype">
      <value>text/microsoft-resx</value>
   </resheader>
   <resheader name="version">
      <value>2.0</value>
   </resheader>
   <resheader name="reader">
      <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <resheader name="writer">
      <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
   	<data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
		<value>
			AAABAAIAEBAAAAEAGABoAwAAJgAAACAgAAABAAgAqAgAAI4DAAAoAAAAEAAAACAAAAABABgAAAAAAEAD
			AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBwNzc3AAAAAAAAAAAAAAAAAAAAAAAA
			AAAAAAAAAAAAAAAAAAAAAAAAAAAAtbW13d7gv76+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
			AAAAAAAAAAAAl5eXwsLCzs7OAAAAAAAAAAAAAAAAerPYZ8rlNzc3AAAAAAAAAAAAAAAAAAAAAAAAn6Ch
			ra2tq6urAAAAAAAAAAAAV6LJtt/tUrn/QEBAAAAAAAAAAAAAAAAAAAAAAAAA1NTUlJSUfn+AAAAAAAAA
			AAAAV6LJR7L1euH2AAAAAAAAAAAAAAAAAAAAAAAAAAAAhISEjI2OYGBgAAAAAAAAV6LJftX7M5jlJ2GH
			AAAAAAAAAAAAAAAAAAAAAAAAtra2q6uri4iFTEtMAAAAAAAALHq0a8vxZsz5AAAAAAAAAAAAAAAAAAAA
			v76+qampcnJytrCtTLb3U73/KUxnRqfKRKr/HILCJm+gAAAAAAAAAAAAAAAAtbW1ubm5zs7O////ibHU
			eN3/S7H/m///atP9MJbwTLb3AAAAAAAAAAAAAAAAAAAAvLy8tbW1tra24dzYX8n7R63/T7X/m///dNn/
			E3m6LHq0AAAAAAAAAAAAAAAAAAAAzs7Oubm5kZKUpMXkkvn/Lpf+Rn+nN3ONoe//Np7/Q6brLzQ5AAAA
			AAAAAAAAAAAA5+fmwcHBn5mUeMr/6fj9Lpf+TZLGvpmXSV5onNT9V7z/O2F+AAAAAAAAAAAAAAAAo6Oj
			6urq+Pn529fTeLv58///a8T/jO3z0J6cIY7sTrT7AAAAAAAAAAAAAAAAAAAA68OaRkZG1NTUnJubv76+
			pMXkvPn/i7i9vpmXOaT/LHq0AAAAAAAAAAAAAAAAAAAAn5+f7c+wTEtMNzc3QEBAPDw8b21vzaqnj9HW
			P6X/foiSAAAAAAAAAAAAAAAAAAAAAAAAAAAAn5mUx726zMvMqqSknJqZAAAAxOT9AAAAAAAAAAAAAAAA
			AAAAAAAA+H8AAPhxAAD4cQAA+GEAAPhhAADwwwAAwAMAAIAHAACABwAAgAcAAIAHAACABwAAgAcAAIAP
			AACADwAA4J8AACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAb21vAExL
			TADMy8wAiIKEAKyXmADSvLwAhn19AKqkpACVkZEAv76+ALOysgCcm5sA0J6cANKmpQDaop8AvpmXAKOL
			igDNqqcAmIeEAMe9ugC+t7QAs6unALawrQCcmpkA0c/OAJ6bmQChnpwAfXdyAJ+ZlADl4NwA4dzYANjI
			uQDrw5oAaWZjAIuIhQDb19MA8e3pAJWUkwCvrq0A3L2cAKuVfgDtz7AAt6OOAKWbjgCXlpQAb29tAFZW
			VQDn5+YAnZ2cAJv//wDV//8A8///ADEyMgA5OjoA+Pn5APHy8gCjpKQAlfv/AKH9/wDL/f8Akvn/AIzt
			8wCP9/4Aj9HWALz5/wCLuL0Ahu3/AJft+wB64fYAoe//AH3l/wBnyuUAacHZAIPl/gBw3P8AcNb1AHbd
			/wBqvNcARqfKAHDY/wB02f8AeN3/AG2swQC26/4Att/tAOn4/QA4lroASazVAF/C6ABq0/0Aa8vxAJDU
			7gA3c40AZsz5AHXT+wB+1fsAH1x6AFO67wBfyfsAY8z+AFeiyQBHhqUASV5oAGqFkgASXooASq/pAEyu
			5QBWvPUAXcP8AEeTvQAhQlQAUpO4ABN5ugAcgsIAH2ONADib2ABHsvUATLb3AFO9/wBawP8AYcP/AEhm
			eABTcIIAb3yEACOJzgAoeK0AJm+gADWNygBDpusASbX/ACdhhwBMsfgATrT7AFC2+gBSuf8AVbv/AFe8
			/wBTqucAYrTtAGvE/wBGf6cAeMr/AHqz2ABgdoUAYG12ABV7xwAlidYAInWyADOY5QA5oO4ALHq0AD6l
			8gBCqPIAMXetACdeiABLsf8ATbP/AE+1/wBNksYAKUxnADthfgBhncsAXIeoAJzU/QA5pP8ARKr/AEet
			/wApY5IAQGSBAIXJ/wArP08Aa5W3AFlsewDE5P0AGIbnACGO7AAuk+4AMJbwADae/wA1m/cAOZ/+ADqi
			/wA8ov4AOp70AD+l/wBDqP8AW7D/AHi7+QCJsdQAMjk/AC6X/gAymv4ANJr/AHWw6ACdxOsApMXkAC80
			OQB+iJIAsLK0AJ+goQCMjY4Afn+AAHSm2wDh5eoAkZKUAN3e4AB1dnoAxcXGAP///wD19fUA7e3tAOrq
			6gDj4+MA29vbANbW1gDU1NQA0tLSAM7OzgDIyMgAwsLCAMHBwQC8vLwAu7u7ALm5uQC2trYAtbW1AK+v
			rwCtra0Aq6urAKmpqQCnp6cApKSkAKOjowCfn58AmpqaAJeXlwCUlJQAk5OTAISEhAB6enoAcnJyAHBw
			cABvb28AYGBgAFlZWQBSUlIARkZGAEBAQAA/Pz8APDw8ADo6OgA4ODgANzc3ADU1NQAAAAAAAAAAAAAA
			AAAAAAAA8PIv/fMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXd1NTzNQAAAAAAAAAAAAAAAAAAAAAA
			AAAAAAAAAAAA4tHO1gr7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoztkL2PcAAAAAAAAAAGdvbzXv
			AAAAAAAAAAAAAAAAAOzQ3OHa+QAAAAAAAABuj0hIYf0AAAAAAAAAAAAAAADcA9PlCuL6AAAAAAAAAHBW
			RENP+wAAAAAAAAAAAAAAAADIOOTd5fwAAAAAAABlaVWqh0n4AAAAAAAAAAAAAAAAAO/ayNvt9gAAAAAA
			AGVcX7hNV+8AAAAAAAAAAAAAAADk2Njt28r1AAAAAAAAZTx1mEVhAAAAAAAAAAAAAAAAAADlzsnc8fAA
			AAAAAKxXVJVeT3wAAAAAAAAAAAAAAAAA7u8Kyd30AAAAAABlSWB1lUyDAAAAAAAAAAAAAAAAANDc5Orv
			Ci8AAAAAAJBORpNiWHsAAAAAAAAAAAAAAAAA4dfl7SMVAvYAAABwl2tbk15zAAAAAAAAAAAAAPIv/vzK
			2SfJaKKaq/oAjz55t5Nqa60AAAAAAAAAAADqCgvm8/HgF6x2ZHd0oL5PPaaxcm1/AAAAAAAAAAAA3tcK
			3tU4A+PHilFtnE1ZlFtRtZJ0anoAAAAAAAAAAADizuDk2tLRHr1jUrqcUTJFWniycXZ+AAAAAAAAAAAA
			AOLVC8jQ1NHMi0dkwZ1ROj1QiHF9makAAAAAAAAAAAAA3jDi6+HfH8NjQ6fBnkoyP1GGcbiXyQAAAAAA
			AAAAAAAK0+Lr5/HPikNRwbOWV0Q7UIe1tJv+AAAAAAAAAAAA6No44DHNLMRaPZ2/s42RXUBGibO5gYPF
			AAAAAAAAAADo1tPf6SbKiz1Hv8CxrRIFelNUu7Z4bJsAAAAAAAAAAOgw0t3oHayONFa8v8CffBAQZ2ak
			uolsoQAAAAAAAAAA6DjR09kLyMuqVjSkt4JIaBATg6+5eIDGAAAAAAAAAAAY6dDU0TcwJMS8rjRUjEs+
			Bw17sLqFqAAAAAAAAAAAABgpKS7o3tbTJc68pDM8RD8HD5DAupatAAAAAAAAAAAAGCEo9/XYCww5ChnE
			qkEzQhEQo6W3lwAAAAAAAAAAAAAYKyoi/vfs2dfg5hrGn0ITDgeKtrSpAAAAAAAAAAAAAADqKCocAjb9
			+fj4+gIBBRITQEe5k8YAAAAAAAAAAAAAAAAYKyogFhsxDBsWFAYFBI9KSoTCAAAAAAAAAAAAAAAAAAAA
			LR0WFBkDFQgJGAAAAK6uAAAAAAAAAAAAAAAAAAAAAAAAAADo6OjoAAAAAAAAAAAAAAAAAAAAAAAAAP/w
			f///4H///+B////gf4P/4H8D/8B/A//gfgP/4H4D/8B+B//gfAf/wPgP/4D4D/+AcB/4ACAf8AAAP+AA
			AD/gAAB/4AAAf+AAAH/gAAB/wAAAP8AAAD/AAAA/wAAAP8AAAH/AAAB/wAAA/8AAAP/gAAD/8AAB//wA
			5///h///
		</value>
	</data>

</root>