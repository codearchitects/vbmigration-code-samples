<?xml version="1.0" encoding="utf-8"?>
<root>
   <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
   <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
      <xsd:element name="root" msdata:IsDataSet="true">
         <xsd:complexType>
            <xsd:choice maxOccurs="unbounded">
               <xsd:element name="metadata">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" />
                     </xsd:sequence>
                     <xsd:attribute name="name" use="required" type="xsd:string" />
                     <xsd:attribute name="type" type="xsd:string" />
                     <xsd:attribute name="mimetype" type="xsd:string" />
                     <xsd:attribute ref="xml:space" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="assembly">
                  <xsd:complexType>
                     <xsd:attribute name="alias" type="xsd:string" />
                     <xsd:attribute name="name" type="xsd:string" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="data">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                        <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                     </xsd:sequence>
                     <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                     <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                     <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                     <xsd:attribute ref="xml:space" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="resheader">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                     </xsd:sequence>
                     <xsd:attribute name="name" type="xsd:string" use="required" />
                  </xsd:complexType>
               </xsd:element>
            </xsd:choice>
         </xsd:complexType>
      </xsd:element>
   </xsd:schema>
   <resheader name="resmimetype">
      <value>text/microsoft-resx</value>
   </resheader>
   <resheader name="version">
      <value>2.0</value>
   </resheader>
   <resheader name="reader">
      <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <resheader name="writer">
      <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
   	<data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
		<value>
			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
			Wv9mbW3/X3l5/2+amv+a3t7/w////5ezs//g29P/+/To/5l7a/8AAAAAAAAAAAAAAABxcXHElYB3/6PC
			wv+w9/f/n+jo/5ba2v99sbH/UlVV/5DNzf+sqab/+/bt//v16v+afGv/AAAAAAAAAAAAAAAAh4eHxK+O
			f/+qzMz/cXFx/3l/f/+Aj4//dYaG/2dsbP+EpaX/6OTe//z37//79ez/m3xr/wAAAAAAAAAAAAAAAJiY
			mECvj4D/ttfX/7Pi4v+p3d3/odnZ/5/d3f+j////nKio//z58//89/D//Pbt/5t8bP8AAAAAAAAAAAAA
			AAAAAAAAopSN/7PGxv+01dX/s+Hh/7Pt7f+u8fH/q/f3/7Kurf/9+fT//Pjx//z27v+cfG3/AAAAAAAA
			AAAAAAAAAAAAAK+ViP/V1NT/y8rK/8G/v/+4tbX/sbGx/6mwsP/Kycf//Pn0//n07v/w6OD/n4Bw/gAA
			AAAAAAAAAAAAAAAAAAC3l4f///////////////////////7+/v/+/fv//fv5/6eCcP+ngnD/p4Jw/6eC
			cP8AAAAAAAAAAAAAAAAAAAAAuJiI//////////////////7+/v/+/v3//vz6//37+f+ngnD/9eLZ/7GO
			fv+ngnBYAAAAAAAAAAAAAAAAAAAAALiYiP//////////////////////////////////////p4Jw/7GO
			fv+ngnBYAAAAAAAAAAAAAAAAAAAAAAAAAAC4mIj/uJiI/7STg/+0k4P/sI59/7COff+siHf/rIh3/6eC
			cP+ngnBYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
			AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAAwAMAAMADAADAAwAAwAMAAIADAACAAwAAgAMAAIAD
			AADAAwAAwAMAAMADAADAAwAAwAcAAMAPAAD//wAA
		</value>
	</data>

</root>